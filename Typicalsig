library(dplyr)
library(DT)
library(curatedMetagenomicData)
library(mia)
library(TreeSummarizedExperiment)

#readin tax id- ftp.ncbi.nlm.nih.gov/pub/taxonomy/new_taxdump/
rankedlineage <- read.delim("~/typicalsig/rankedlineage.dmp")
taxid<-rankedlineage %>%
  select(X1,root,X, X.1) %>%
  dplyr::rename (tax_id=X1, 
                 tax_name=root,
                 species=X,
                 genus=X.1)

#select healthy by location
##1.vagina
vagina<- sampleMetadata %>%
  filter(disease=='healthy')%>%
  filter(body_site == "vagina") %>%
  select(where(~ !all(is.na(.x)))) %>%
  returnSamples("relative_abundance")
##2. skin
skin<- sampleMetadata %>%
  filter(disease=='healthy')%>%
  filter(body_site == "skin") %>%
  select(where(~ !all(is.na(.x)))) %>%
  returnSamples("relative_abundance")
##3.oralcavity
oralcavity<- sampleMetadata %>%
  filter(disease=='healthy')%>%
  filter(body_site == "oralcavity") %>%
  select(where(~ !all(is.na(.x)))) %>%
  returnSamples("relative_abundance")
##4.nasalcavity
nasalcavity<- sampleMetadata %>%
  filter(disease=='healthy')%>%
  filter(body_site == "nasalcavity") %>%
  select(where(~ !all(is.na(.x)))) %>%
  returnSamples("relative_abundance")
##5.milk
milk<- sampleMetadata %>%
  filter(disease=='healthy')%>%
  filter(body_site == "milk") %>%
  select(where(~ !all(is.na(.x)))) %>%
  #return TreeSummarizedExperiment object for samples
  returnSamples("relative_abundance")
##6.stool- develoment version has not corrected the duplicate error
stool<- sampleMetadata %>%
  filter(disease=='healthy')%>%
  filter(body_site == "stool") %>%
  select(where(~ !all(is.na(.x)))) %>%
  #LeChatelierE_2013 and NielsenHB_2014- colnames/sample_id values are not unique- temporarily drop LeChatelierE_2013
  filter(study_name != c("LeChatelierE_2013")) %>%
  returnSamples("relative_abundance")

#create function to species/genus appeared in >=50% of samples
returnSig <- function(obj, threshold = 0, prevalence=0.5){
  fractionpassing.logical <- rowSums(obj > threshold) / ncol(obj)
  rows.passing <- fractionpassing.logical > prevalence
  return(fractionpassing.logical[rows.passing])
}


##1.vagina
vagina.byranks <- splitByRanks(vagina)
g<-returnSig(assay(vagina.byranks[["Genus"]]))
s<-returnSig(assay(vagina.byranks[["Species"]]), prevalence = 0.499)
g1<-tibble(name=names(g),value=g)%>%
  arrange(desc(value)) %>%
  left_join(taxid,by=c("name"="genus"))
s1<-tibble(name=names(s),value=s)%>%
  arrange(desc(value))%>%
  left_join(taxid,by=c("name"="species"))


##2.skin
skin.byranks <- splitByRanks(skin)
g<-returnSig(assay(skin.byranks[["Genus"]]))
s<-returnSig(assay(skin.byranks[["Species"]]), prevalence = 0.499)
g1<-tibble(name=names(g),value=g)%>%
  arrange(desc(value)) %>%
  left_join(taxid,by=c("name"="genus"))
s1<-tibble(name=names(s),value=s)%>%
  arrange(desc(value))%>%
  left_join(taxid,by=c("name"="species"))

##3.oralcavity
#returnSig(assay(oralcavity), threshold=0, prevalence=0.499)
oralcavity.byranks <- splitByRanks(oralcavity)
g<-returnSig(assay(oralcavity.byranks[["Genus"]]))
s<-returnSig(assay(oralcavity.byranks[["Species"]]), prevalence = 0.499)
g1<-tibble(name=names(g),value=g)%>%
  arrange(desc(value)) %>%
  left_join(taxid,by=c("name"="genus"))
s1<-tibble(name=names(s),value=s)%>%
  arrange(desc(value))%>%
  left_join(taxid,by=c("name"="species"))


##nasalcavity
#returnSig(assay(nasalcavity), threshold=0, prevalence=0.499)
nasalcavity.byranks <- splitByRanks(nasalcavity)
g<-returnSig(assay(nasalcavity.byranks[["Genus"]]))
s<-returnSig(assay(nasalcavity.byranks[["Species"]]), prevalence = 0.499)
g1<-tibble(name=names(g),value=g)%>%
  arrange(desc(value)) %>%
  left_join(taxid,by=c("name"="genus"))
s1<-tibble(name=names(s),value=s)%>%
  arrange(desc(value))%>%
  left_join(taxid,by=c("name"="species"))


##5.milk- no species identified
milk.byranks <- splitByRanks(milk)
g<-returnSig(assay(milk.byranks[["Genus"]]))
s<-returnSig(assay(milk.byranks[["Species"]]), prevalence = 0.499)
g1<-tibble(name=names(g),value=g)%>%
  arrange(desc(value)) %>%
  left_join(taxid,by=c("name"="genus"))
s1<-tibble(name=names(s),value=s)%>%
  arrange(desc(value))%>%
  left_join(taxid,by=c("name"="species"))

#6.stool
stool.byranks <- splitByRanks(stool)
g<-returnSig(assay(stool.byranks[["Genus"]]))
s<-returnSig(assay(stool.byranks[["Species"]]), prevalence = 0.499)
g1<-tibble(name=names(g),value=g)%>%
  arrange(desc(value)) %>%
  left_join(taxid,by=c("name"="genus"))
s1<-tibble(name=names(s),value=s)%>%
  arrange(desc(value))%>%
  left_join(taxid,by=c("name"="species"))
